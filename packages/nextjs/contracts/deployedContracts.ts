/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    LimitOrderLib: {
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "sellToken",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "buyToken",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "sellAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "buyAmount",
              type: "uint256",
            },
          ],
          name: "LimitOrderCreated",
          type: "event",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "maker",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "receiver",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "makerAsset",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "takerAsset",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct ILimitOrderProtocol.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "domainSeparator",
              type: "bytes32",
            },
          ],
          name: "calculateOrderHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "baseAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "slippageTolerance",
              type: "uint256",
            },
          ],
          name: "calculateSlippageAmounts",
          outputs: [
            {
              internalType: "uint256",
              name: "minAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxAmount",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "sellToken",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "buyToken",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "sellAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "buyAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "slippageTolerance",
                  type: "uint256",
                },
              ],
              internalType: "struct LimitOrderLib.RebalanceOrder",
              name: "rebalanceOrder",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "salt",
              type: "uint256",
            },
          ],
          name: "createRebalanceOrder",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "maker",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "receiver",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "makerAsset",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "takerAsset",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct ILimitOrderProtocol.Order",
              name: "order",
              type: "tuple",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "maker",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "receiver",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "makerAsset",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "takerAsset",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct ILimitOrderProtocol.Order",
              name: "order",
              type: "tuple",
            },
          ],
          name: "validateOrder",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 3,
    },
    MockLimitOrderProtocol: {
      address: "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "taker",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "makingAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "takingAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "remainingMakingAmount",
              type: "uint256",
            },
          ],
          name: "MockOrderFilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "taker",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "makingAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "takingAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "remainingMakingAmount",
              type: "uint256",
            },
          ],
          name: "OrderFilled",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "cancelOrder",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "maker",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "receiver",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "makerAsset",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "takerAsset",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct ILimitOrderProtocol.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "traits",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "args",
                  type: "bytes",
                },
              ],
              internalType: "struct ILimitOrderProtocol.TakerTraits",
              name: "",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "fillContractOrderArgs",
          outputs: [
            {
              internalType: "uint256",
              name: "makingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "takingAmount",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "maker",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "receiver",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "makerAsset",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "takerAsset",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct ILimitOrderProtocol.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "traits",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "args",
                  type: "bytes",
                },
              ],
              internalType: "struct ILimitOrderProtocol.TakerTraits",
              name: "",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "fillOrderArgs",
          outputs: [
            {
              internalType: "uint256",
              name: "makingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "takingAmount",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "filledOrders",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
          ],
          name: "getOrder",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "maker",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "receiver",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "makerAsset",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "takerAsset",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct ILimitOrderProtocol.Order",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
          ],
          name: "isOrderFilled",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "orders",
          outputs: [
            {
              internalType: "uint256",
              name: "salt",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
            {
              internalType: "address",
              name: "makerAsset",
              type: "address",
            },
            {
              internalType: "address",
              name: "takerAsset",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "makingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "takingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "makerTraits",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        cancelOrder: "contracts/portfolio/interfaces/ILimitOrderProtocol.sol",
        fillContractOrderArgs:
          "contracts/portfolio/interfaces/ILimitOrderProtocol.sol",
        fillOrderArgs: "contracts/portfolio/interfaces/ILimitOrderProtocol.sol",
      },
      deployedOnBlock: 11,
    },
    MockSpotPriceAggregator: {
      address: "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "DAI",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "INCH",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "USDC",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "USDT",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "WETH",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "srcToken",
              type: "address",
            },
            {
              internalType: "address",
              name: "dstToken",
              type: "address",
            },
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          name: "getRate",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "srcToken",
              type: "address",
            },
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          name: "getRateToEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "mockEthPrices",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "mockPrices",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "resetStablecoinPrices",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
          ],
          name: "setMockEthPrice",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "srcToken",
              type: "address",
            },
            {
              internalType: "address",
              name: "dstToken",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
          ],
          name: "setMockPrice",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "stablecoin1",
              type: "address",
            },
            {
              internalType: "address",
              name: "stablecoin2",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "deviationBps",
              type: "uint256",
            },
          ],
          name: "setStablecoinDeviation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 9,
    },
    OptimizedBalancerFactory: {
      address: "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_priceFeed",
              type: "address",
            },
            {
              internalType: "address[]",
              name: "_stablecoins",
              type: "address[]",
            },
            {
              internalType: "address",
              name: "_limitOrderProtocol",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "NoStablecoin",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "balancer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isTimeBased",
              type: "bool",
            },
          ],
          name: "BalancerCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_assetAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_percentages",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
            {
              internalType: "uint256",
              name: "_driftPercentage",
              type: "uint256",
            },
          ],
          name: "createDriftBalancer",
          outputs: [
            {
              internalType: "address",
              name: "balancer",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_assetAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_percentages",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
            {
              internalType: "uint256",
              name: "interval",
              type: "uint256",
            },
          ],
          name: "createTimeBalancer",
          outputs: [
            {
              internalType: "address",
              name: "balancer",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "limitOrderProtocol",
          outputs: [
            {
              internalType: "contract ILimitOrderProtocol",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "priceFeed",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "stablecoins",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userDriftBalancers",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userTimeBalancers",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 13,
    },
    PortfolioAnalysisLib: {
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      abi: [],
      inheritedFunctions: {},
      deployedOnBlock: 7,
    },
    StablecoinGridLib: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [
        {
          inputs: [],
          name: "LOWER_BOUND",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "UPPER_BOUND",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "stablecoinValue",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "nLevels",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "gridRangeBps",
              type: "uint256",
            },
          ],
          name: "calculateGridParams",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "capital",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "nLevels",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "minOrderSize",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxOrderSize",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "gridRangeBps",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "pegPrice",
                  type: "uint256",
                },
              ],
              internalType: "struct StablecoinGridLib.GridParams",
              name: "params",
              type: "tuple",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "stablecoins",
              type: "address[]",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "capital",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "nLevels",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "minOrderSize",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxOrderSize",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "gridRangeBps",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "pegPrice",
                  type: "uint256",
                },
              ],
              internalType: "struct StablecoinGridLib.GridParams",
              name: "params",
              type: "tuple",
            },
          ],
          name: "generateGridOrders",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "fromToken",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "toToken",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "limitPrice",
                  type: "uint256",
                },
              ],
              internalType: "struct StablecoinGridLib.Order[]",
              name: "orders",
              type: "tuple[]",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
          ],
          name: "isPriceWithinBounds",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 5,
    },
    YourContract: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "greetingSetter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newGreeting",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "premium",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "GreetingChange",
          type: "event",
        },
        {
          inputs: [],
          name: "greeting",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "premium",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newGreeting",
              type: "string",
            },
          ],
          name: "setGreeting",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userGreetingCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 1,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
