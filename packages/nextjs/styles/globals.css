@import "tailwindcss";
@import "tw-animate-css";

/* Theme variant helper tied to next-themes data-theme attribute */
@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

@theme {
  --shadow-center: 0 0 12px -2px rgb(0 0 0 / 0.05);
  --animate-pulse-fast: pulse 1s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Replaced DaisyUI plugin with local theme variables for parity */
:root,
[data-theme="light"] {
  --color-primary: #93bbfb;
  --color-primary-content: #212638;
  --color-secondary: #dae8ff;
  --color-secondary-content: #212638;
  --color-accent: #93bbfb;
  --color-accent-content: #212638;
  --color-neutral: #212638;
  --color-neutral-content: #ffffff;
  --color-base-100: #ffffff;
  --color-base-200: #f4f8ff;
  --color-base-300: #dae8ff;
  --color-base-content: #212638;
  --color-info: #93bbfb;
  --color-success: #34eeb6;
  --color-warning: #ffcf72;
  --color-error: #ff8863;

  --radius-field: 9999rem;
  --radius-box: 1rem;
  --tt-tailw: 6px;
}

[data-theme="dark"] {
  --color-primary: #212638;
  --color-primary-content: #f9fbff;
  --color-secondary: #323f61;
  --color-secondary-content: #f9fbff;
  --color-accent: #4969a6;
  --color-accent-content: #f9fbff;
  --color-neutral: #f9fbff;
  --color-neutral-content: #385183;
  --color-base-100: #385183;
  --color-base-200: #2a3655;
  --color-base-300: #212638;
  --color-base-content: #f9fbff;
  --color-info: #385183;
  --color-success: #34eeb6;
  --color-warning: #ffcf72;
  --color-error: #ff8863;

  --radius-field: 9999rem;
  --radius-box: 1rem;
  --tt-tailw: 6px;
  --tt-bg: var(--color-primary);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }

  p {
    margin: 1rem 0;
  }

  body {
    min-height: 100vh;
  }

  h1,
  h2,
  h3,
  h4 {
    margin-bottom: 0.5rem;
    line-height: 1;
  }
}

:root,
[data-theme] {
  background: var(--color-base-200);
}

/* Deprecated Daisy helper class overrides removed during migration */

/*
  ---break---
*/
@theme inline {
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

/*
  ---break---
*/
:root {
  --radius: 0.625rem;
  /* Map shadcn semantic tokens to DaisyUI theme variables for parity */
  --background: var(--color-base-200);
  --foreground: var(--color-base-content);
  --card: var(--color-base-100);
  --card-foreground: var(--color-base-content);
  --popover: var(--color-base-100);
  --popover-foreground: var(--color-base-content);
  --primary: var(--color-primary);
  --primary-foreground: var(--color-primary-content);
  --secondary: var(--color-secondary);
  --secondary-foreground: var(--color-secondary-content);
  --muted: var(--color-neutral);
  --muted-foreground: var(--color-neutral-content);
  --accent: var(--color-accent);
  --accent-foreground: var(--color-accent-content);
  --destructive: var(--color-error);
  --destructive-foreground: var(--color-base-content);
  --border: var(--color-base-300);
  --input: var(--color-base-200);
  --ring: var(--color-primary);
  /* Optional charts/sidebar tokens can be mapped later if needed */
  --chart-1: var(--color-info);
  --chart-2: var(--color-success);
  --chart-3: var(--color-warning);
  --chart-4: var(--color-accent);
  --chart-5: var(--color-secondary);
  --sidebar: var(--color-base-100);
  --sidebar-foreground: var(--color-base-content);
  --sidebar-primary: var(--color-primary);
  --sidebar-primary-foreground: var(--color-primary-content);
  --sidebar-accent: var(--color-accent);
  --sidebar-accent-foreground: var(--color-accent-content);
  --sidebar-border: var(--color-base-300);
  --sidebar-ring: var(--color-primary);
}

/*
  ---break---
*/
/* When using DaisyUI with next-themes attribute="data-theme", the semantic
  vars above will reflect the active theme automatically via --color-* vars.
  No separate .dark block is required at this stage. */

/*
  ---break---
*/
@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}
